import { Metadata } from "next";
import { cookies } from "next/headers";
import React, { Suspense } from "react";
import { Refine } from "@refinedev/core";
import { DevtoolsProvider } from "@providers/devtools";
import { RefineKbar, RefineKbarProvider } from "@refinedev/kbar";
import {
  useNotificationProvider,
  RefineSnackbarProvider,
} from "@refinedev/mui";
import routerProvider from "@refinedev/nextjs-router";

import { dataProvider } from "@providers/data-provider";
import { AppIcon } from "@components/app-icon";
import { ColorModeContextProvider } from "@contexts/color-mode";
import { authProviderClient } from "@providers/auth-provider/auth-provider.client";
import { adminUsersProvider } from "@providers/data-provider/users";

import { MdGroup, MdHouse, MdSecurity, MdTerminal } from "react-icons/md";
import { adminSessionsProvider } from "@providers/data-provider/admin/sessions";

import ClientLocalizationProvider from "@lib/client-localization-provider";
import { sessionsProvider } from "@providers/data-provider/sessions";
import { accountsProvider } from "@providers/data-provider/accounts";
import { accessControlProvider } from "@providers/access-control-provider";

export const metadata: Metadata = {
  title: "Refine",
  description: "Generated by create refine app",
  icons: {
    icon: "/favicon.ico",
  },
};

// export enum Resources {
//   Home = "Home",
//   Security = "Security",
//   Admin = "Admin",
//   Users = "Users",
// }

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const cookieStore = cookies();
  const theme = cookieStore.get("theme");
  const defaultMode = theme?.value === "dark" ? "dark" : "light";

  return (
    <html lang="en">
      <body>
        <Suspense>
          <RefineKbarProvider>
            <ColorModeContextProvider defaultMode={defaultMode}>
              <RefineSnackbarProvider>
                <DevtoolsProvider>
                  <Refine
                    routerProvider={routerProvider}
                    dataProvider={{
                      default: dataProvider,
                      sessions: sessionsProvider,
                      accounts: accountsProvider,
                      adminUsers: adminUsersProvider,
                      adminSessions: adminSessionsProvider,
                    }}
                    notificationProvider={useNotificationProvider}
                    authProvider={authProviderClient}
                    accessControlProvider={accessControlProvider}
                    resources={[
                      {
                        name: "Home",
                        options: { label: "Home" },
                        list: "/home",
                        meta: {
                          icon: <MdHouse size={22} />,
                          test: "kiki",
                        }
                      },
                      {
                        name: "Security",
                        options: { label: "Security" },
                        list: "/security",
                        meta: {
                          icon: <MdSecurity size={22} />,
                        }
                      },
                      {
                        name: "Admin",
                        options: { label: "Admin" },
                        meta: { icon: <MdTerminal size={22} /> },
                      },
                      {
                        name: "Users",
                        list: "/users",
                        show: "/users/show/:id",
                        meta: { icon: <MdGroup size={22} />, parent: "Admin" },
                      },
                    ]}
                    options={{
                      syncWithLocation: true,
                      warnWhenUnsavedChanges: true,
                      useNewQueryKeys: true,
                      projectId: "1LxSeQ-Ach9aW-3KZqEZ",
                      title: { text: "Refine Project", icon: <AppIcon /> },
                    }}
                  >
                    <ClientLocalizationProvider>
                      {children}
                    </ClientLocalizationProvider>
                    <RefineKbar />
                  </Refine>
                </DevtoolsProvider>
              </RefineSnackbarProvider>
            </ColorModeContextProvider>
          </RefineKbarProvider>
        </Suspense>
      </body>
    </html>
  );
}
